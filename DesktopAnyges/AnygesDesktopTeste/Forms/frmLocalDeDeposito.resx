<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADsAAAA8CAYAAADYIMILAAAABGdBTUEAALGPC/xhBQAACiRJREFUaEPt
        mvdbVNcWho0UmWF6Z1CCNEEEpImKoEBsqMQoRYkxuXpNj7nJzf+/8r0bTnJy3OMwFJ8J8sP3wMycs/b+
        Vt/l1JNqxT4WnJA9rjghe1xxQva44oTsccUHJ/uF8LirbI+Eh5WSw5r+fxx57ijwwchC5pGIzeezNppM
        WG88Zmc7OuxcrMP6O+M2mU7ZSqlgn4s4CvHJOCg+CNn75ZJdSiUt19ZmnS0tVmlrt8GOmI13dtpoPG7n
        z5yxbOvObyjghhSC9X2yDoIjJcuEr+eyVmpvt1xrq43H4raVL9hPlS5721W1t+5vl/2q/78rSynpjIh3
        WLq1xVl/VUryyd0vjozsw0rZJtJJy8ua4/FOe14o2utSyR5lczabSNhFER+IxWxY7jzVmXBEvymW7I1I
        39b/XVIQVr4t1/bJ3w+OhCwxN55KObe8lU47q90RgXNy10J7m/UpRicUo1OZtIvVwUSnsz4EryWT9t9S
        2XlAQd7wqZSxqlj3jdMo3kuWhIKFGkkYPDuXy1hSE72RTDmXndfftD4PKkaXiwWXiUlYLjMLZOM7suDl
        TMoyeu6CLP6tFIQ3ZPV5VAogcfnGq4UHmvtdyQzP3UuWB26XNJBcMCOg3XElmKuKv8VCzm4JK5o0EySu
        mGwglGTULfcblZv+v9pty6m0pTRhLFgv6UB8IZ9ziexKImm/K5aX5BlFWXylmHfPMA7EIXOvXHRuvqzf
        bmpOC8KsvGVASkVGXJ41o8/BuH6y+nFSWu44fdquS6sTirl+yoTcsHqm3SoavCwwiaq+p3RMS+hnGng2
        m7Gysi1uuJXPW0GDjil21/boihCeyaY12VZby2btlVy6R+OOS1l3RQ6vGVbMn5P1K/oe92cuVaFbc/tU
        3w1L0Tel5LLG7lFpwxjIrunGaCsmzWAZXPGNBn2pBPKlXOuZsCEyj3M5u5fJ2LQ0iQLyAhqdVsL5Xm7Y
        o8/U0UZjjkaDuGayxPsNxT9eViLm9ZdytSyLrynZPcnlbVNz2dacmNs3xbIb+0WhZHEZa8ejduTWJIvp
        +yQUrUL0N7nU/2qAEvJaz5BF0fA8MaaJ4BlXZQmf/HogXHj/gay7KLJkdeS+FCGUT7nyzQX8onJGhk+q
        hIUVXZMssUGckCAeauI+oVGgELR6WZYmk5KNiWuf/HogJrNy5bRkEEJfq2z9rhzgGzcM5vBSVsW1x5Rn
        CMlAZk2ygAeJR9wGEj7hUTDYj9L8TVkjqYnSHDxSRvfJrwUUTTPSKcuMaWzi9n2eFcYvjJ3cSWqrivGw
        3PeSBfSyaGmrUNjzgIBBcWuXWZW0gmy9F5AvSDwXd0tQI+NSo3sVerSnUbl1yVJayHyXlOEoBb4BakKE
        J+TSZ5WkKEk++VGQOYflDWdF9ofK3rwpAKWOhImilnZLVRh1yWIRkkxCLvlE2dc3SC1gERqDoqxLjfbJ
        jwKrFjRZElMjFgXfyqr04KOyqq8JqUsWkCzOq7EoadJfq/w0MokfZN1hemC1hD7ZUdAEdIssceqTVwvk
        lEElspJqLfXeJ3tPZLEuAnLqaxH4nwYSxttK1TX+ZcURSvPJD0C5G5JSWP59LyX55EXBPCBKbcf73PLQ
        IxvsiWyAJdU+yoEjLAvvNYZZ6eBeZEhfLAEy54CIJvTcFSmHBOeTFQbjQ3RKeSGlzE241SIKGiILlgrK
        lLSMcmk6mKDAB0U++J9G42cBpdB50T4SBnRClJWgX8Vr6G9JYlhmRRmcdwiXn5SgWPcGMsOyUQb5gBqM
        zGuSWS/jN0wWgaxccLeMrNynxfY1Ne23lQUfZLJ2X6DFnJN1WL1AEFB3X4nApKxAtqSHRhaW7uo443ra
        dSkEBVI6aAv5i3vS596T3FWBpSKrKWRDku0dFg/1FhmgYbIByHbUYMoEqxxclJbONRJuq6XD2tXujWsR
        QHak3k7oe6yBm+YV/yweINqn9+m1b4kUmZtkOKWFSEzvu0WA3ktJLuQYp6J3WANflcLoo33z82HfZAGW
        gTQD3lfMQR6L4LILsmRCccQyjGduSPu0j3jCCxFm8UDvC5lnen5SFoyfbrHLatyRR0/L8nJOXsPzeAfL
        N+SR6JBZz22jOBDZKFjjBmRvytUgG24mPtPvWBTLE5PEJ0TYnWBxPydLBe4IIcjiBcQ8ZFFmIGs/ODKy
        iyKL5Wa1NmWSAXB7LIzF/lDHQwySmIg9sun13edYt6IsylZTksVykGV9uSwSrFiCxXUYudY21w7+qoxK
        o89WTPAb6+IArLiwetNalgRDVv1RZYPdxFcCf/9G2TXrb8plV5pYnPO9+273t79Rch3Yi+JOzDYdWSxL
        Zv1KsUhTfj8CvgOr6n1/Vs1cz+f/+s4HktdXIsuuRVOSZYLsKLZ+8slOA6JSEQZtJ5thb0oVV3bomsqR
        Z2gviXnKTpOS3dlgg+yCyLL4pmmgXITB+pa6y4b4gPpg2sQ7kWfoqlDUv4LsYjL9TukJQMdDAxKQJUNH
        OyB2I2k4mposCWqH7Lt1NkAjZOm6/gWWPSHrcGzc+KOK2XA2PiyyL5uRLJtlQYJaOETLNiXZcDb+CMiG
        Vj1aiNNU0CBEn9srWU7pmjZmWcBD9vNczh7sHmzdKry7wRYmy06ij2x48c6pIXI5gw0/0ygOlSy7+VW5
        HtsrrG7YonGHS5HnOKGDLMeM7DONeMjyDEem7EmxgIDsQS+UHCpZSF3UxIfU3H+nJRyneTT0d0v/dGUO
        lWn2z6r3hTQL/LBCUBoHasQ/m+UcofC50W2YKA6VLFiUi9Lkf5HL26ti2fJa0bCvFBwIAyZNMmMzbj6X
        /etkPABbrexc3pVFOWCGNFul4Wf2g0Mny95RTyxmI7sHYWy8cWWAs56oq0aBEohxvGFEMn6rdrttGa4y
        +BJdozh0skwYK3BysKTY5chxpjPhYo4jf45RuIUTuCR/2SkkuWFRMvCQiHInikNwLMyWa9gz9otDJwuY
        PLdrEsrGbJiz3bKSTsul29wJ3XnF35SIc7uFjTUSFHvP3KpBMZwlkZjYm2IzvpG94ffhSMgC6iSn7my6
        sWnGQdVrxTBXfXbuKra4u1IQ5HYNt+CozxynsOPI2VCvamy9w7BGcGRkAa7HFSNIca2Imy3BATMHUrgq
        G2uc24DtQsEda7DVekEWjSaug+JIyQJcmmaAqz5cHYI05z2c/XC9h5swfOa4hLjmKhHJjFtwPnkHwakn
        3V32IfBQk19UuZlUTeWcpice20XcfZ5QEppXJqZzcsnLI+OgOLUx0GcbFwZt+8qsPZsYs43+Ptu8OGLb
        c7O2dWnU1vvP29bYqG3Pztjm6Iit9/Xas8sT+jxtm8MXbGOg355PT9nzmSnbGBqwjeEhJ+v51KR+kyy9
        42Trnad6d3Pskm1embGnkr3W22NPNeamZG9ozHU9z3s8jxzkIRf5jMN4jIss5uFk613m5+Ypmcyb+cMD
        Pk6W+G0M9Nmfo7dKKWt+/E0AAAAASUVORK5CYII=
</value>
  </data>
</root>