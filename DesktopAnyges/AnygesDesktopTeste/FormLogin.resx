<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJ0AAACdCAYAAACuJnrWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAGGVJREFUeF7tnQmQFOd1x2Hv+96dPRECCRAgoRPEoQvZCCELgRCIQxICJIHEIU4B
        OgDJqthJ7Ny3c1VSTspxDqdyO4lz26mUncO5EycpO4lzOnbiShw7Fl/+vzfdM73D7O7sMrOwM+9f9a/d
        7ent7ul+/a7vfe+b5XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6H
        w+FwOBwOh8Nx1aBG7BUXiuvEbeJOcVf0+wPiIrFPZF+HY0qoF28UD4o/IH5M/JT4RfEtMUTkd7bxGfv8
        oPiCeLvYJDocE6JT3CF+QPxbMRauUayaPTtUi/k+i/gP4k+LT4tdosNxCdrFfeJviF8STXgQrq6a2rCo
        sTGsaGkNa9vbw4aOjrCpqyts6e4OD3V22jY+u0H79GjfmtHC+H/ir4tPiA2iwzGrWrxf/DnxomjC0lpV
        HZY2NZlQ7e/rDycHh8LZoeHw8vCI8VX9/op+vjKsbfr9jHhC+xxI9YdNnV1hWWNT6KiuSQrfV8QfEzHZ
        jgoG2u294udEE4726mrTWrt7esNLEqLXIgFD0E4PDodT2oYAHh0YDMdEfj+tz00gE2TfZySsK3WsVh0z
        Pr74l+KTIsLuqDDMEd8vmjDUyiTe0tQc9vWmwlkJ2DlpsFckPAjXU729Mqmd4Zbm5rBE2m+JtNi1DQ1h
        vri4qTEs0/a1be1hZ3dPOCRNh8CZRhwaMQ24W/+P6Y3PJf6veEGsEh0VghHxw6IJQUdNTdgsk3haWutV
        CQpm8wUJzzr5avPrG0KTNNXsrMCMyQYJ7lBtXVjT2hqe7u0zTRlrwRODg+HetjbtUxXv/1XxJdEFrwKQ
        En9RtIc/XFcnAek1rYawYTLXtXeEvtrajDBFxN/7G5Gg4CPiL0fk9z8TCRgy+2NSb5ZW3CvhOyvNh/Bh
        dvH3muUvRvv9t7hXdJQx6sTvEu2hz62vDwf6+03YMIXP9aXCYpnBHK32F+K3i9tFEsCkVDpE/EHI7/PE
        zeKb4u+Imei3U8EEphlfEMFDkz4iwUtovH8UV4mOMsUB0TTSgMzgfplQNBwCt7OnJ/SP1m7k6E6J14mT
        QY/IKMXPiJZElv0Mt8vvQ4uauZWQv03atHpWJrWC9mQ0w1FikLO6M2I/G0oMzvNZMbTI9D2h6DQtcMNh
        uwKAnAjzp8SbxMtBm3hC/GfRjruipcX8xpd0Tvy9mxSQxJ+J7xZLDQT77SJau+JSNwgZw0X/Lv6b+Anx
        u0WGnLaKt4nXiDw4hLMx+jlV8P8fEk3rPCAtE6c2npLwYQL5TEQzfaOIySwWyAH+sRhqxI0yrZyXqJZg
        JaFdGcFYJl4OkveqWSRg4pibxK8Vf0/8T5HoGf+UkZeKwctifLNzSRL1n8Q/FYkwPyj+hPjj4jeIJ0U0
        CKMH94rcVEzaeOCm47SHxQ2N0jKkQ0bCgVTKzCzbRaLJd4mMuRYbD4qfFy0PuEeCfkaajsTyQ/L3qrJm
        9pvE8aJZPhsUbxXvFhliOyYeF79G5F6hpblXPyv+kfj3IkIWnyM5YvInIqmjsgdVGIxJht6amrCmLT18
        hLap080oJDURkWjyP8RPiwxdkeTlISwWk2gVGW0ITVVVYZce+GsSuBPyr5aONm/vE9ESpQL+IYIdFkjw
        T/QPmLYjD3hNXX18DQhIrlmnumWtyMv2Q+LHRbQiCe1k4cG4bNB3n6PzrGvrkH/ZGm9H660Ryx68rVRt
        hC4J3QuKHjE3zyhy3CbfikhvTVubJWKva2gII3V1ull10ki15oshOI1izvhmTLQkZoPjPyq2iGgZiyZv
        bWpOpy7kyG/sRMNk/u+XxFL7lQg0msheLMZvETpyeGi72dnv87zIi3mH+IZI5QovV/x5htyDet0L7klL
        VbXdI+7ViIRrbn1DuLGpKaxsbQsP6FwESkf7B8M5ffdbdW+jY3CvKNeqCOBLWBR5h946hIAHkCQpBqK9
        I1Ba4aD8nz0SzKf7+sKTvX3hka4uGwW4vbklXFNfb2aL4yWISSGC/FX+RlDj4OHYwECY15DRLjj6K8Tp
        wC0imjkMSkAO63vxwj2n79apF5Dt4kfF7xVxMeJtZgV69T8LZBVWtbSG+9vbwyN6cXZ099o94d7gIx7R
        dzuse/aieGIgnabhflq6Rvd5j/Zt1r2IjvsjImmkigC5LhsR4C190nyctKmJxzQhA+iMbUKE0KK+6AZy
        I3lgRIP8D0nY9dIYi2S6mqszNzVDqkQ4HkL3uDRqXTZP9i3idOK8aFqWShU0Hd/pDkW2bE8STYbWWi0X
        ZKuu+XkJVVx4AO0FjRLPHCO+V3xPeFxCx31M39P0/VuulzQ6Pi89QVtF4TExbfZ0IxCe49ENGou8vTH5
        OxZObjSO+Vl8Nf18SgJ4p7RBR0L7oR0u6E0nEbxMZjbajnOPQz6dQNuZFrtJ5o/ruTA8J6xVRM02WC9h
        W6KX5LGubtPyCJcJp74b3zX+3vnuST7yGfdnr7RcIjWEBeDlryiQzTfTx43Y25sape2mQh4EQsdxeFDP
        yuSgQdCmED/qkB5iYoiLCI/UwnSCdIYFUildx6HUQHhQGjoWBooIHpfmf2kordFiNyPf9y2U/D/acGVr
        JoD4srhbrEjsEXH+w91yeDGXl3uDY3KcWEPs0EPETOHAD+snkZzOSST5nHglwMjIV/DTKBDguhoVCFAM
        SmEAIxbHJWz5vtdUSNULL2Civu93xYodASEdwA2wt/6gIlne7Hw3birErKD5EDz+Xi4Ty7kikm44I14J
        3CVa3g7y3XfJJSCgir//eOZyMuTlw48l6IrOR6rpkFjRoLzHbsgGRWOxgBSbPExMDFFffTaIINe1X5xO
        DIgkcO0aMKdUG+PbTeTTToV878P9g6ZRo3OSEB4WKxoLxL8TLXnJG46zXKw3PWas9TDh5MVIoXBO8Qvi
        w+J0gNlhDP/ZuedJ4NJpk5G811wM8n3xGRNJd3J/DuHrRZtdtVERGzcq3w28XJrgDaTTJgge1cKcV/wr
        8Wax1GBUwc5JEpcUCJq92C8YjF/eY+JcvczReXm5KyYZPBF44AztmLlBME7m3MRikoeBYK9R8JLQACRk
        SzlRGj+O4gZLBJOkfXm4NC9XzFirV2e/I2PX+soOwCQVMzvUmG3s6DJtlO9GFovkvPChKOTkvOK/iivF
        UoD0kI3/ErFukjan4CDfdRWLfL8X5csNSqNyXvEz4uVWsZQdVov/IsrpTQ8RFTOSzUd8qc2d3cliyu8U
        S6EJyPzbsB8JYRLh+Jf5rqkYJGJFyxE0cc6IVNA48oDyHLtJTGLhxhUrb5ePPHiGiph8E52XcdElYjFB
        qRTzXUNzdXXYLbNK/rAUflxM/MR9vX3J8WimPU62ArpicK1IHV1oVXS5p7fXBC/fjS0Wze+h4mR2RiNQ
        n1ZMIMSYNqv6OKXzlSI1AhFkrAP+8A0No6Y8HhYd44BRCqs7myd/66jMLEWX+W5yMcggOMWcPdkqDyov
        ijkRmuGmiwQsCHcpX6Ljg+mX6B4FSDpnTIbc8Ckd44C6M4oV7aYtb2kxc1Eq/47hJqLlhVnN8EmRMu9i
        gfJ3M3WML5Ogzncdl8v0yMOITXFMJL9JBXkbiwKBmaVC1sp73s6chuERS3Xku+GXQx4WQn1XVjuQ1ijm
        lMAfFcOQtPahgYGSfQdGNKgXbMv6cf8lVlzp0uWCEm0m7oQaRZeMHVKeQyog342/HCJ0D0lDcC6RsUnm
        GFwvXg4ojuShU50bUnV1VuFSTKHDh0NTM5d2V09P0kXAPblS48ozHlRjUMdvCc5VMrWYWaK/Yka1pDCe
        ULSXrL8TmcGFf1krThaMbTKp2yYDQcw3aaBiCh3H4oWh7i7n2kkCl2KCUcWAvm42WoEzvlQPb39fypLH
        xfDzrP5OmoIC0N0SvPnZZDGk5P3rxMnU3FGk+ZuiHYP+Jne2tloxJk4+gjLVFyZOs8RjyPy8TxagvmrU
        fBGGFKe7RrAsweQaM1OQWWQPdnTYw8PXs9EFMX4wuTmw5DbSFTx4olYeHILLhCAa3rwxMsciwPva20NT
        tt8I/GFxSJwI9COmr4n933BtXdihY5+PSpY4B8KHdjo7lC7BT1538mfuNr4r1801832ZaEMJfnwuER/u
        FXEqmtkxBpg88wui3WS0HgPZjC0yIYUHwcPE9CJQ/M1D5SfmMy7o5G8e4D5py3d0doYbG5tMG3VLkB/t
        6grntA/l4wgis9Xi84m/Is4X84EUC41w6Eti+zPN8IXUQHhzzjXhsAKIpRIQqoOZbri6pTU83t0dDpq5
        TV8XtLkOOdfNtvh7IYBbZEpp1sg1x+cSiVI9aCgRmHnPRGsrhYJMcEHz0SFpPbOjpAH2SqAwwc+lUlYx
        i4ahdQRT8W5ubs7MHktMQTQyN2G1TCFCidZDMNk3sc+viTTRSYIplWdF899oF7uiOe17XtAxmHREZyg+
        S5K0BsWbixobwj1tbSZMzHLjnDTygXv0N74mLwOCSulXojIGot2IjqejQqbiwcA1k6ttOl9MtB+l6KQN
        0FxEc2gr5ssm90uQUvm/FtGgVgECmW9Ly9d3SmgYNM9paEilMzPsAVUpdCuwcdVGCQQtK6x7p7hev7eN
        NtM0ykFjWnCUS2r8KCnn2rluvgfb8jTU5lrJZeJ2VMwUwqsFS0WGrRAauiyNap+QJJNx7pAGWtnSlkye
        0j/lBpGENIWcfyjaZ2ihnb294XWZRzQfLcTiz0QCBVIqTIy2cyLYm6Wt3pCw4TcyHzdRSACZAE5vPCaA
        M8Z8kYoTyqvuknZlUvkE3dophqANGYENs/LRsI4rCFpHIDz4NeSn3inSF4TSbNMcdBDAv2LAPaoaJh9H
        P5QkGBSnb4o9aHywR+V7YWqZMINfFn8mIqBWFcPs+i0y32/o+EekGa+XpkzsR6sIeo3QDCgG/t9FrgOT
        GmtUBE/bIe4DIxnnIlJST9mVtxObAaCZoWm5g3LmX9fDZXpfNBsMocs3EI7fiOk2k8lseJoYvq7gAg2W
        o/GsPo76vzd1bAKaa7MVKxBTfJ+YC7pTXeQ6uJ5zI+nRlkSFL4JfihIrxzTAhI51IAgoSF1s10NOaLoj
        7JQH+GqZ4IA5szj6CC0pDwoR8B/bpeFI3bCd0vOEpoL4bmOVE2WEjiiZEQUi00QjHSbulLKK2VFCREKX
        Nq+x0EWaDo4ldACfCbP4P6KZWnw8ItIDCjLoM7e7p8+CBqZOMp+W/SLSkGe8Flws4/QW0fJjCJ2OkSN0
        VIb4iMIMxSVClzCvkEBgIpCisWgTM02zG4SEvBk/MbkLsj4cc2l/UmSa4XjAl3wL07ylu8sE14WufED5
        uQIJCYu0U47QYV6JfJkWGDesziXOP5/TxdJq/BgFQEBsVEPMqV2LNRwRKuVROP4ch54hcYNsjoem+yo5
        N0qRXNOVF6yTOkL3rDQUvdlyNB2ZfNrykz8bi6Rjflu0wAJfjooXtBOJX/w9tosIMZ0vaU/2WyLRLYEE
        x6BpY0x8PcrHLWVC4pdjkZZJTBJyoZvB+DYxbV5TKRO6rT09NmrA9qlyngKGc3L+N3d35/18MtwQJZOP
        DbrQlQu+VcwIHWaMNmKLmppsfu31MpUTkSaELMu0OCLb6IlyUkJCVQpjrPF+C0X2YX9ay8b/cynT+1+n
        /yWh/PJgulTLzWt54DvEjHmNB/spCcIn42f8+3i0AgLRBuSH0vNlM5UfTAyP9rOB+lH7jsX0vvwPM/DT
        P13TlQsY5rI1WIk6edCMLFCLR2dzVjeciOxLORG0/4t+x/GnLIm/4/2S+05E21/XEAut+3Tlg+8RTehY
        HYeHTX/eVa2t1iCQipLJkoJM5mwgcFSEsI3j5e43EeNroN7ujDSfmVcXurLAKKE7PzLHnH8iULZPlfiI
        p+SHbVNQku/zyfBuRcKMSFA86pquPHCJ0NEwujZbZcLEH9ImVKiMR6qWKYH6ohj6autM6Ei/RAJMuoQu
        7YUci+NQBGBrQKxt63ChKzN8nxh6I6EjNbFN0WK0AiEPnQoOxkepUGHRk7FI4SYttj4ghlRC6KJCUMqb
        SPhS7pTv/5PkfFtEq9+734Wu7DBK6M5FZeiJEYln2GkSsGTzGEL3DnYoEFT6Wod113Tlhxyhu2QYbLwB
        /1xQavT9Yj6ho1v5ZOYoUBtntXgudOUHGh1mfDrTdKOFbjKNZUoidG5eyw+XaLptPfLpskI3mS7jLnSO
        CZERkj4JHR3McwIJhI5iykLhQucoCBMFEleFpmMpUE8Olw8uFbqeq0voPJAoP5iQxEJn5tV9OkeJMWMC
        CTev5YOJzOsVT5m4eS0/uNA5ph2XmtfuUSkTDyQcRcclmm5rV0/cywShu+J5OoSOlIkLXfmApjWjzetV
        JnT3udCVFRASW28sOyJx9SWHad/q5rV8gJCYphsldFdZIIHQuaYrL5iQxOb1KhK6O0XXdGWIjHntrZXQ
        9ecVuivl0y0XKW93oStDRHMkajKBBIISCR28UpqOZUZZXzbcGwvd6CmItKZwoZuhoMec9RuhBf75kRGb
        NthWnemaTvl5oYvPFVPodohfZuVFusOTP2Rhk4FsfzuaVxdzUTzHNGKjaI0N13V0WFsJZvTPb8h006Th
        DavbFIJiCt15MTRXV1kTHnresa4XXT/ZLr6bnRwzE6xe81kxrGppDWckKKyMsza74vOXxEfEQoDQWTTc
        L6FjlZ0dPX2x0NGlfZtYCGgV9vOiLXV+RL4mmm5de0d8TUzyeUx0zFCwyg3azPr5HhlIL5VkLb6kZdgu
        frNYCBC6dN5PgQm9SphDq40cA03HtMJCgD9n0w9vaW6x5or0WFnW1BRfD3NsF4iOGQr8IrqsW0NqFjZh
        WSec9sQS6n8uzhMLwQXRjkXnpeH6jA+GEN0uFgJb/5UlRbd0d5uWox9yYkG5D4oeRMxwsISntW9dES1Y
        jLbDx2NbRBYgKQS3iZnVehJkNWzM5kRg0vanxDC3oSEcHRw0P3O9golIY8JnRccMB61dPyIGlnN6Xj4U
        C/LSfh8zyXYRk8bs+0JAi376CrPwHN020aRzxYnAQnHvE03A1kvoMx04sz2LaTtBtwFHGQBNZg+WdbhY
        dvzlwRFbUikKBCAtIwpdsrJBxCQXGvkCFiCx1XXmSchelH9JD2R6DidWysG/1CU5ygH0D6HPr62e83xq
        IJOQpYsm20VGKEhVlCI/RoRsIxDNVdWWHkHL0W5sXta35HNGKhxlBJZvsge8XL7daT1w/DuSxXQAiD5D
        8Fh7qxD/rFBsEunSZKtzo13TDRFHwv1t7UlNO5lEtWOGgMXgPipa9MkKODx4goqd0jysOMhnEWlHUWhE
        OxYwkwQF1igHP45miKRHXhuZY/2KE6sz4suxuJ6jDLFBtEiW8VgWNEHw0HiPd/eEztGC9wcii5tMtBBJ
        PpCUpvUs+TvTZqta2wLtZzGrh/oHwpzsOCva1SPWMsfroj1wFv+lzi7uFYz2yVlUGH5cfJf4gEjgkG99
        Vcwxi5WQ+H2P+BnR/r+luspGG9BwBDAn+4fCjVk/ErJuK0t/OsoYrGbDg7aHPlJXH/ZJ2EzwpIVYcO4u
        aaWubFFAzC+InxDJyZ0QWWoJDcUynx8Sf1/MLFSMdpsvAX6ChLSOjUYlcLmtuTl5TFbKZtTEUQHoF1lp
        0B4+ppZZYmclGK8ODyvIIMDot7KjIWnDnCXMY7Jsk7VwTRJ/EW35cEdnODZAlDxsCWCWR1+YzcdBzLcv
        g15hQMPYWCqkxm6lNNxBaTq0EpqPcdHD0k5bFXSsaGm1xYMRUKpBKJeCrI5IAcDChsawqqXNJv6gLTkG
        Q1z4cQ93doa+2lGaE4Hz9EiFAl+MMqPPiyYQAxIg1nClvi02iwggwQZlUftTqbBL0S4k6mUFHgKDUwND
        tj+CBlkbYnt3r43RVs/OCBukKniJ6KhwsH7/x0QTDNIbmNW3tbdbHg9thUBhJok+z43MMZ4f1s9oG4KJ
        WWaYbXNXV7hBwsZ6rvExRYKL02JyWXVHhQNzi9YjZ5YRlo6aalvn6x75d5skTE/19FmUC/md0YUNnV1h
        tUzzzU3NIVVba0ngxDEIQKgEXiE6HHlxk0ja45MiObSMAFGOREK3tSpNfse/S4wqJEnx6PvF9SJjtQ7H
        hGCx4N0i6ZBPi58TbaHhPGQgnymFCNqHxaPirWK+nJ7DMSHQUpQ93S2Sl6NihXFcyMQffm4XmctKCsR9
        NofD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6Hw+FwOBwOh8Ph
        cDgcDofD4XA4HA6HwzFr1qz/B8BdphO4DaasAAAAAElFTkSuQmCC
</value>
  </data>
</root>